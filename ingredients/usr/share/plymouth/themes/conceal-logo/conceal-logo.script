Window.SetBackgroundTopColor(0.0, 0.0, 0.0);     # Black background
Window.SetBackgroundBottomColor(0.0, 0.0, 0.0);  # Black background

# Logo setup
logo.image = Image("splash.png");
logo.sprite = Sprite(logo.image);
logo.sprite.SetX(Window.GetWidth() / 2 - logo.image.GetWidth() / 2);
logo.sprite.SetY(Window.GetHeight() / 2 - logo.image.GetHeight() / 2);

# Progress bar setup
progress_box.image = Image("progress_box.png");
progress_box.sprite = Sprite(progress_box.image);
progress_box.x = Window.GetWidth() / 2 - progress_box.image.GetWidth() / 2;
progress_box.y = Window.GetHeight() * 0.75;
progress_box.sprite.SetPosition(progress_box.x, progress_box.y);

progress_bar.original_image = Image("progress_bar.png");
progress_bar.sprite = Sprite(progress_bar.original_image);
progress_bar.sprite.SetPosition(progress_box.x + 2, progress_box.y + 2);

fun boot_progress_callback(duration, progress)
{
    if (Plymouth.GetMode() == "shutdown" || Plymouth.GetMode() == "boot") {
        # Ensure everything is visible
        logo.sprite.SetOpacity(1);
        progress_box.sprite.SetOpacity(1);
        progress_bar.sprite.SetOpacity(1);
        message_sprite.SetOpacity(1);

        if (progress < 0.1) progress = 0.1;  # Ensure minimum visibility
        
        # Scale the progress bar instead of moving it
        scaled_width = progress_bar.original_image.GetWidth() * progress;
        scaled_height = progress_bar.original_image.GetHeight();
        progress_bar.image = progress_bar.original_image.Scale(scaled_width, scaled_height);
        progress_bar.sprite.SetImage(progress_bar.image);
        
        # Keep the progress bar aligned to the left of the box
        progress_bar.sprite.SetX(progress_box.x + 2);
    } else {
        # Hide everything when not booting/shutting down
        logo.sprite.SetOpacity(0);
        progress_box.sprite.SetOpacity(0);
        progress_bar.sprite.SetOpacity(0);
        message_sprite.SetOpacity(0);
    }
}

# Replace the refresh function with the boot progress function
Plymouth.SetBootProgressFunction(boot_progress_callback);

# Message display
message_sprite = Sprite();
message_sprite.SetPosition(Window.GetWidth() / 2, Window.GetHeight() * 0.9);

fun message_callback (text)
{
    message_image = Image.Text(text, 1, 1, 1);
    message_sprite.SetImage(message_image);
    message_sprite.SetX(Window.GetWidth() / 2 - message_image.GetWidth() / 2);
}

Plymouth.SetMessageFunction(message_callback); 